#!/usr/bin/env python3.6
import random
from account import User
from logins import Credential

#functions for user_account
def create_user(fname,lname,phone,email):
  '''
  Function to create a new user
  '''
  new_user = User(fname,lname,phone,email)
  return new_user

def save_user(user):
  '''
  Function to save user
  '''
  user.save_user()

def del_user(user):
  '''
  Function to delete a user
  '''
  user.delete_user()

def copy_email(user,number):
  '''
  Function to delete a user
  '''
  user.copy_email(number)

def find_user(number):
  '''
  Function that finds a user by number and returns the user
  '''
  return User.find_by_number(number)

def check_existing_user(number):
  '''
  Function that check if user exists with number and returns a Boolean
  '''
  return User.user_exist(number)

def display_users():
  '''
  Function that returns all the saved users
  '''
  return User.display_users()



#functions for user_credential
def create_credential(uname,password,phone):
  '''
  Function to create a new credential
  '''
  new_credential = Credential(uname,password,phone)
  return new_credential

def save_credential(credential):
  '''
  Function to save credential
  '''
  credential.save_credential()

def del_credential(credential):
  '''
  Function to delete a credential
  '''
  credential.delete_credential()

def copy_email(credential,number):
  '''
  Function to delete a credential
  '''
  credential.copy_email(number)

def find_credential(number):
  '''
  Function that finds a credential by number and returns the credential
  '''
  return Credential.find_by_number(number)

def check_existing_credential(number):
  '''
  Function that check if credential exists with number and returns a Boolean
  '''
  return Credential.credential_exist(number)

def display_credentials():
  '''
  Function that returns all the saved credentials
  '''
  return Credential.display_credentials()


def main():
  print("Hello, Welcome to your password locker account \n")

  while True:
    print("Enter command to chose what to do: \n create - command to create new account with user choosing own password  \n create-auto - command to create account with auto generated password \n login - command to login to your account \n exit - command to exit the program \n")

    short_code = input().lower()


    #user creating own password
    if short_code == 'create':
      print("New user Account")
      print("-"*10)

      print ("First name ....")
      f_name = input()

      print("Last name ...")
      l_name = input()

      print("Username ...")
      u_name = input()
      print("Password ...")
      u_password = input()

      print("Phone number ...")
      p_number = input()

      print("Email address ...")
      e_address = input()


      save_user(create_user(f_name,l_name,p_number,e_address)) # create and save new user.
      print ('\n')
      print(f"New user {f_name} {l_name} created")
      print ('\n')

      save_credential(create_credential(u_name,u_password,p_number)) # create and save new user.
      print ('\n')
      print(f"New Credentials: username - {u_name} , password - {u_password} created")
      print ('\n')


    #creating account with auto generated password
    if short_code == 'create-auto':
      print("New user Account")
      print("-"*10)

      print ("First name ....")
      f_name = input()

      print("Last name ...")
      l_name = input()

      print("Username ...")
      u_name = input()
      characters = "abcdefghijklmnopqrstuvwxyz01234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ!-/\|_@#$%&*?"
      u_password = "".join(random.sample(characters, 8))
      print(f"You autogenerated password is {u_password}")

      print("Enter Phone number ...")
      p_number = input()

      print("Email address ...")
      e_address = input()


      save_user(create_user(f_name,l_name,p_number,e_address)) # create and save new user.
      print ('\n')
      print(f"New user {f_name} {l_name} created")
      print ('\n')

      save_credential(create_credential(u_name,u_password,p_number)) # create and save new user.
      print ('\n')
      print(f"New Credentials: username - {u_name} , password - {u_password} created")
      print ('\n')

    
    #Login code
    if short_code == 'login':
      print("Welcome to login Interface")
      print("Enter your username")
      input_user_name = input()

      print("Enter your password")
      input_user_password = input()

      if input_user_name != u_name or input_user_password != u_password:
        print("ACCESS DENIED!!")
        print("Invalid username or password!!!!")
        print("Try again")
      else:
        print("ACCESS GRANTED!!")
        print(f"Welcome {u_name} to your account")
        print("Use the following command to do some action with your account: \n find-u - command to search for your user details \n delete-u - command to delete user details \n copy-e - command to copy email address \n display-c - command to display credentials \n delete-c - command to delete credentials \n find-c - command to search credentials")

    elif short_code == 'display-u':

      if display_users():
        print("Here is a list of all your users")
        print('\n')

        for user in display_users():
          print(f"{user.first_name} {user.last_name} .....{user.phone_number}")

        print('\n')
      else:
        print('\n')
        print("You dont seem to have any users saved yet")
        print('\n')

    elif short_code == 'find-u':
      print("Enter the number you want to search for")

      search_number = input()
      if check_existing_user(search_number):
        search_user = find_user(search_number)
        print(f"{search_user.first_name} {search_user.last_name}")
        print('-' * 20)

        print(f"Phone number.......{search_user.phone_number}")
        print(f"Email address.......{search_user.email}")
      else:
        print("That user does not exist")


    elif short_code == 'delete-u':

      print("Enter the number you want to delete")

      delete_number = input()
      if check_existing_user(delete_number):
        dl_user = find_user(delete_number)
        print(f"{dl_user.first_name} {dl_user.last_name} will be deleted")
        dl_user = del_user(dl_user)
        print("user deleted successfully")

      else:
        print("That user does not exist")

    elif short_code == 'copy-email':

      print("Enter the number you want to copy email from")

      find_number = input()
      if check_existing_user(find_number):
        email_user = find_user(find_number)
        print(f"{email_user.first_name} {email_user.last_name}  {email_user.email} email address will be copied")
        email_user = copy_email(email_user,find_number)
        print("Email address copied successfully")

      else:
        print("That user does not exist")


    elif short_code == "ex":
      print("Bye .......")
      break
    else:
      print("I really didn't get that. Please use the short codes")

if __name__ == '__main__':

  main()